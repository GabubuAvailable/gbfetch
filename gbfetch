#!/usr/bin/env bash
###############################################################################
#                                                                             #
#                888       .d888          888             888                 #
#                888      d88P"           888             888                 #
#                888      888             888             888                 #
#        .d88b.  88888b.  888888  .d88b.  888888  .d8888b 88888b.             #
#       d88P"88b 888 "88b 888    d8P  Y8b 888    d88P"    888 "88b            #
#       888  888 888  888 888    88888888 888    888      888  888            #
#       Y88b 888 888 d88P 888    Y8b.     Y88b.  Y88b.    888  888            #
#        "Y88888 88888P"  888     "Y8888   "Y888  "Y8888P 888  888            #
#            888                                                              #
#       Y8b d88P                                                              #
#        "Y88P"                                                               #
#                                     gabubu's fetch. For every linux distro. #
###############################################################################
#             ORIGINAL CODE FROM "SFETCH" MADE BY SPEEDIEGAMER                #
#                       *less bloated edition ;)*                             #
###############################################################################

# Colors
white='\033[0m' # the boring white
yellow='\033[1;33m' # yellow
purple='\033[0;35m' # purple
lblue='\033[0;36m' # light blue
blue='\033[0;34m' # blue
lgreen='\033[1;32m' # light green
green='\033[0;32m' # green
red='\033[0;31m' # red
orange='\033[0;33m' # orange

# Get the OS
if [[ -f "/etc/os-release" ]]; then
    os="$(< /etc/os-release)"
fi

# Check what init system the user is using.
if [[ -f "/lib/systemd/systemd" ]]; then
	init="systemd"
elif [[ -f "/sbin/openrc" ]]; then
	init="OpenRC"
elif [[ -f "/usr/bin/runit" ]]; then
	init="runit"
elif [[ -f "/usr/bin/s6-rc" ]]; then
	init="s6"
elif [[ -f "/etc/systemd/user.conf" ]]; then
        init="systemd"
fi

# Check what distro is used.
if [[ $os =~ "Gentoo" ]]; then
	os="Gentoo Linux" && art="Gentoo"
elif [[ $os =~ "Arch" ]]; then
	os="Arch Linux" && art="Arch"
elif [[ $os =~ "Debian" ]]; then
	os="Debian Linux" && art="Debian"
elif [[ $os =~ "Ubuntu" ]]; then
	os="Ubuntu Linux" && art="Ubuntu"
elif [[ $os =~ "Fedora" ]]; then
	os="Fedora Linux" && art="Fedora"
elif [[ $os =~ "Manjaro" ]]; then
        os="Manjarno Linux" && art="Manjaro"
elif [[ $os =~ "void" ]]; then
        os="Void Linux" && art="Void"
fi

# If the distro is not any of the above
if [[ $os =~ "NAME" ]]; then
	 os="Unknown Linux" && art="Linux" # Linux is the "generic" art
fi

# Base
user="$(whoami)" # whoami returns the user who runs the command

if [[ -f "/etc/hostname" ]]; then
    host="$(< /etc/hostname)"
else
    host="$(hostname)"
fi

# Data
kernel="$(uname -sr)" # Get kernel version
shell="$(basename "${SHELL}")"

if [[ -f "/usr/bin/lscpu" ]]; then
	cpu="$(lscpu | sed -nr '/Model name/ s/.*:\s*(.*) @ .*/\1/p')"
else
	cpu="$(uname -p)" # Failsafe
fi

if [[ -f "/usr/bin/pacman" ]]; then
        pkg="$(pacman -Q | wc --lines)" # For Arch based distributions
elif [[ -f "/etc/portage/make.conf" ]]; then
        pkg="$(ls -d /var/db/pkg/*/* | wc --lines)" # For Gentoo based distributions
elif [[ -f "/usr/bin/dpkg" ]]; then
        pkg="$(dpkg --get-selections | wc --lines)" # For Debian based distributions
elif [[ -f "/usr/bin/rpm" ]]; then
        pkg="$(rpm -qa | wc --lines)" # For Red Hat/Fedora based distributions
elif [[ -f "/usr/bin/xbps-query" ]]; then
        pkg="$(xbps-query --list-pkgs | wc --lines)" # For Void based distributions
fi

if [[ "$(whoami)" = "root" ]]; then
        echo -e "${red}YOU ARE RUNNING GBFETCH AS ROOT!!!"
fi

# Failsafe just in case the values are empty
if [[ "$cpu" = "" ]]; then
    cpu='$(uname -p)'
elif [[ "$shell" = "" ]]; then
    shell='sh'
elif [[ "$pkg" = "" ]]; then
    pkg="$(ls -lah /usr/bin | wc --lines)"
elif [[ "$init" = "" ]]; then
    init="Unknown"
elif [[ "$host" = "" ]]; then
    host="$(uname -n)"
elif [[ "$host" = "" ]]; then
    host="$(< /proc/sys/kernel/hostname)"
elif [[ "$host" = "" ]]; then
    host="$(hostnamectl --static)"
fi

# Display everything to the user!

# Arch Linux based distributions
if [[ $art =~ "Arch" ]]; then
echo -e "${yellow} $user@$host ${white}on ${lblue}$os"
echo -e "${lblue}          ..         "
echo -e "${lblue}          -=.        "
echo -e "${lblue}         -==-               ${white}Kernel: $kernel"
echo -e "${lblue}        ::-==-              ${white}Shell: $shell"
echo -e "${lblue}       -======-             ${white}Packages: $pkg"
echo -e "${lblue}      -===--===-            ${white}Init: $init"
echo -e "${lblue}     -===.  .===-.          ${white}CPU: $cpu"
echo -e "${lblue}   .-===-    :==--   "
echo -e "${lblue}  .-=-::.    .::-=-. "
echo -e "${lblue} .:.              .:."
fi

# Gentoo Linux based distributions
if [[ $art =~ "Gentoo" ]]; then
echo -e "${yellow} $user@$host ${white}on ${purple}$os"
echo -e "${purple}     .=+**+=:        "
echo -e "${purple}   -*%%%%###%#+:     "
echo -e "${purple} .=%%%%%-:=--#%%*-          ${white}Kernel: $kernel"
echo -e "${purple} -==#%%%*=-=-#%%%%+.        ${white}Shell: $shell"
echo -e "${purple}  :+===+%%%%%%%%%%%--       ${white}Packages: $pkg"
echo -e "${purple}     -+#%%%%%%%%%+.==       ${white}Init: $init"
echo -e "${purple}   .+%%%%%%%%%#=.=+:        ${white}CPU: $cpu"
echo -e "${purple} .=%%%%%%%%#+:-++.   "
echo -e "${purple} -=%%%%#*=--++-      "
echo -e "${purple} -=--===+*+:         "
fi

# Debian based distributions
if [[ $art =~ "Debian" ]]; then
echo -e "${yellow} $user@$host ${white}on ${red}$os"
echo -e "${red}      :-+===:.    "
echo -e "${red}    =#*=:..:-+#+. "
echo -e "${red}  :#=.        .#*        ${white}Kernel: $kernel"
echo -e "${red} .#.    ::..   -#        ${white}Shell: $shell"
echo -e "${red} -+    :.      :*        ${white}Packages: $pkg"
echo -e "${red} -=    .=     .+.        ${white}Init: $init"
echo -e "${red} .#.    .--::-:          ${white}CPU: $cpu"
echo -e "${red}  -#.             "
echo -e "${red}   :+:            "
echo -e "${red}     :=:          "
fi

# Ubuntu based distributions
if [[ $art =~ "Ubuntu" ]]; then
echo -e "${yellow} $user@$host ${white}on ${orange}$os"
echo -e "${orange}                .++-     "
echo -e "${orange}          .-===-=%%%     "
echo -e "${orange}       .-- -*++*=-=-            ${white}Kernel: $kernel"
echo -e "${orange}      .===.     .+**+           ${white}Shell: $shell"
echo -e "${orange}   -==.-=.        =++:          ${white}Packages: $pkg"
echo -e "${orange}   +**:-=         -==:          ${white}Init: $init"
echo -e "${orange}      :==-       -%%%.          ${white}CPU: $cpu"
echo -e "${orange}       :==.:===+##*#:    "
echo -e "${orange}          :%%%%#:--:     "
echo -e "${orange}             .. .==-     "
fi

# Fedora based distributions
if [[ $art =~ "Fedora" ]]; then
echo -e "${yellow} $user@$host ${white}on ${blue}$os"
echo -e "${blue}      .-+**#**+=:     "
echo -e "${blue}    -######*=:::+*=   "
echo -e "${blue}  .#######-  -=-+**#:        ${white}Kernel: $kernel"
echo -e "${blue} .#######*  *####**##.       ${white}Shell: $shell"
echo -e "${blue} =#######+  #####**##+       ${white}Packages: $pkg"
echo -e "${blue} +##**=        +**###*       ${white}Init: $init"
echo -e "${blue} +#***#**=  **#######=       ${white}CPU: $cpu"
echo -e "${blue} +***####+  ########+ "
echo -e "${blue} +#**+++-  =#######-  "
echo -e "${blue} =###-..:-*#####+-    "
fi

# Manjaro based distributions
if [[ $art =~ "Manjaro" ]]; then
echo -e "${yellow} $user@$host ${white}on ${lgreen}$os"
echo -e "${lgreen} =============: -====="
echo -e "${lgreen} =============: -====="
echo -e "${lgreen} =============. -=====       ${white}Kernel: $kernel"
echo -e "${lgreen} =====-         -=====       ${white}Shell: $shell"
echo -e "${lgreen} =====- .=====: -=====       ${white}Packages: $pkg"
echo -e "${lgreen} =====- .=====: -=====       ${white}Init: $init"
echo -e "${lgreen} =====- .=====: -=====       ${white}CPU: $cpu"
echo -e "${lgreen} =====- .=====: -====="
echo -e "${lgreen} =====- .=====: -====="
echo -e "${lgreen} =====- .=====: -====="
fi

# Void Linux based distributions
if [[ $art =~ "Void" ]]; then
echo -e "${yellow} $user@$host ${white}on ${green}$os"
echo -e "${green}          'cdkOkxl'         "
echo -e "${green}         cOOOOOOOOOko,      "
echo -e "${green}     .             .OOk,           ${white}Kernel: $kernel"
echo -e "${green}    '::.             cOOl          ${white}Shell: $shell"
echo -e "${green}    ,::     ,c;;c.   .;cl.         ${white}Packages: $pkg"
echo -e "${green}     .'    ;Oo  ,     .ko          ${white}Init: $init"
echo -e "${green}    '::      .c;     .cc:          ${white}CPU: $cpu"
echo -e "${green}     :::.             .O    "
echo -e "${green}      .:::'.     ..         "
echo -e "${green}          :::::::::         "
fi

# Unknown based distributions
if [[ $art =~ "Linux" ]]; then
echo -e "${yellow} $user@$host ${white}on ${red}$os"
echo -e "${red}     .,:::,.    "
echo -e "${red}  .dKMMMMMMMXx' "
echo -e "${red} ;MMMMKdodKMMMMl       ${white}Kernel: $kernel"
echo -e "${red} 0MMMd     KMMMX       ${white}Shell: $shell"
echo -e "${red}         .lMMMW,       ${white}Packages: $pkg"
echo -e "${red}       ;0MMWOc.        ${white}Init: $init"
echo -e "${red}      .MMMO.           ${white}CPU: $cpu"
echo -e "${red}       ','      "
echo -e "${red}      ,WMM:     "
echo -e "${red}       ;o:      "
fi

exit 0
